version: 2.1

### ABOUT
#
# This configuration powers our Circleci.io integration
#
# Note:
# Netlify works independently from this configuration to
# create pull request previews and to update `https://docs.ohif.org`
###

orbs:
  codecov: codecov/codecov@1.0.5
  cypress: cypress-io/cypress@1.8.0

defaults: &defaults
  docker:
    - image: circleci/node:10.16.0
      environment:
        TERM: xterm # Enable colors in term
  working_directory: ~/repo

jobs:
  PR_UNIT_TESTS:
    <<: *defaults

    steps:
      # Enable yarn workspaces
      - run: yarn config set workspaces-experimental true

      # Checkout code and ALL Git Tags
      - checkout:
          post:
            - git fetch --all
      - restore_cache:
          name: Restore Yarn and Cypress Package Cache
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          paths:
            - ~/.cache ## Cache yarn and Cypress
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

      # RUN TESTS
      - run:
          name: 'JavaScript Test Suite'
          command: yarn run test:unit:ci

      # PLATFORM/VIEWER
      - run:
          name: 'VIEWER: Combine report output'
          command: |
            viewerCov="/home/circleci/repo/platform/viewer/coverage"
            touch "${viewerCov}/reports"
            cat "${viewerCov}/clover.xml" >> "${viewerCov}/reports"
            echo "\<<\<<\<< EOF" >> "${viewerCov}/reports"
            cat "${viewerCov}/lcov.info" >>"${viewerCov}/reports"
            echo "\<<\<<\<< EOF" >> "${viewerCov}/reports"
      - codecov/upload:
          file: '/home/circleci/repo/platform/viewer/coverage/reports'
          flags: 'viewer'

      # PLATFORM/CORE
      - run:
          name: 'CORE: Combine report output'
          command: |
            coreCov="/home/circleci/repo/platform/core/coverage"
            touch "${coreCov}/reports"
            cat "${coreCov}/clover.xml" >> "${coreCov}/reports"
            echo "\<<\<<\<< EOF" >> "${coreCov}/reports"
            cat "${coreCov}/lcov.info" >> "${coreCov}/reports"
            echo "\<<\<<\<< EOF" >> "${coreCov}/reports"
      - codecov/upload:
          file: '/home/circleci/repo/platform/core/coverage/reports'
          flags: 'core'

      # Persist :+1:
      - persist_to_workspace:
          root: ~/repo
          paths: .

  MERGE_UNIT_TESTS:
    <<: *defaults

    steps:
      # Enable yarn workspaces
      - run: yarn config set workspaces-experimental true

      # Checkout code and ALL Git Tags
      - checkout:
          post:
            - git fetch --all
      - restore_cache:
          name: Restore Yarn and Cypress Package Cache
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          paths:
            - ~/.cache ## Cache yarn and Cypress
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

      # RUN TESTS
      - run:
          name: 'JavaScript Test Suite'
          command: yarn run test:unit:ci

      # PLATFORM/VIEWER
      - run:
          name: 'VIEWER: Combine report output'
          command: |
            viewerCov="/home/circleci/repo/platform/viewer/coverage"
            touch "${viewerCov}/reports"
            cat "${viewerCov}/clover.xml" >> "${viewerCov}/reports"
            echo "\<<\<<\<< EOF" >> "${viewerCov}/reports"
            cat "${viewerCov}/lcov.info" >>"${viewerCov}/reports"
            echo "\<<\<<\<< EOF" >> "${viewerCov}/reports"
      - codecov/upload:
          file: '/home/circleci/repo/platform/viewer/coverage/reports'
          flags: 'viewer'

      # PLATFORM/CORE
      - run:
          name: 'CORE: Combine report output'
          command: |
            coreCov="/home/circleci/repo/platform/core/coverage"
            touch "${coreCov}/reports"
            cat "${coreCov}/clover.xml" >> "${coreCov}/reports"
            echo "\<<\<<\<< EOF" >> "${coreCov}/reports"
            cat "${coreCov}/lcov.info" >> "${coreCov}/reports"
            echo "\<<\<<\<< EOF" >> "${coreCov}/reports"
      - codecov/upload:
          file: '/home/circleci/repo/platform/core/coverage/reports'
          flags: 'core'

      # Persist :+1:
      - persist_to_workspace:
          root: ~/repo
          paths: .

  npm_publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Avoid hosts unknown for github
          command:
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking
            no\n" > ~/.ssh/config
      - run: git config --global user.email "danny.ri.brown+ohif-bot@gmail.com"
      - run: git config --global user.name "ohif-bot"
      - run:
          name: Authenticate with registry
          command:
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run: npx lerna version
      - run: npx lerna publish from-package

      # Persist :+1:
      - persist_to_workspace:
          root: ~/repo
          paths: .

  docs_publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Avoid hosts unknown for github
          command:
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking
            no\n" > ~/.ssh/config
      - run: git config --global user.email "danny.ri.brown+ohif-bot@gmail.com"
      - run: git config --global user.name "ohif-bot"
      - run: yarn global add gitbook-cli
      - run: yarn global add gh-pages
      - run: chmod +x ~/repo/.circleci/build-and-publish-docs.sh
      - run: ~/repo/.circleci/build-and-publish-docs.sh

  docker_publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            # This file will exist if a new version was published by
            # our `semantic-release` command in the previous job
            if [[ ! -e tmp/updated-version.txt ]]; then
              exit 0
            else
              # Remove npm config
              rm -f ./.npmrc
              # Set our version number using vars
              export IMAGE_VERSION=$(cat tmp/updated-version.txt)
              export IMAGE_VERSION_FULL=v$IMAGE_VERSION.${CIRCLE_BUILD_NUM}
              echo $IMAGE_VERSION
              echo $IMAGE_VERSION_FULL
              # Build our image, auth, and push
              docker build --tag ohif/$IMAGE_NAME:$IMAGE_VERSION_FULL --tag ohif/$IMAGE_NAME:latest .
              echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
              docker push ohif/$IMAGE_NAME:$IMAGE_VERSION_FULL
              docker push ohif/$IMAGE_NAME:latest
            fi

  viewer_demo_build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      # Build & Test
      - run:
          name: 'Build Demo Site, Upload SourceMaps, Send Deploy Notification'
          command: |
            npx lerna run build:viewer:demo --stream
            # export FILE_1=$(find ./build/static/js -type f -name "2.*.js" -exec basename {} \;)
            # export FILE_MAIN=$(find ./build/static/js -type f -name "main.*.js" -exec basename {} \;)
            # export FILE_RUNTIME_MAIN=$(find ./build/static/js -type f -name "runtime~main.*.js" -exec basename {} \;)
            # curl https://api.rollbar.com/api/1/sourcemap -F source_map=@build/static/js/$FILE_1.map -F access_token=$ROLLBAR_TOKEN -F version=$CIRCLE_SHA1 -F minified_url=https://$GOOGLE_STORAGE_BUCKET/static/js/$FILE_1
            # curl https://api.rollbar.com/api/1/sourcemap -F source_map=@build/static/js/$FILE_MAIN.map -F access_token=$ROLLBAR_TOKEN -F version=$CIRCLE_SHA1 -F minified_url=https://$GOOGLE_STORAGE_BUCKET/static/js/$FILE_MAIN
            # curl https://api.rollbar.com/api/1/sourcemap -F source_map=@build/static/js/$FILE_RUNTIME_MAIN.map -F access_token=$ROLLBAR_TOKEN -F version=$CIRCLE_SHA1 -F minified_url=https://$GOOGLE_STORAGE_BUCKET/static/js/$FILE_RUNTIME_MAIN
            curl --request POST https://api.rollbar.com/api/1/deploy/ -F access_token=$ROLLBAR_TOKEN -F environment=$GOOGLE_STORAGE_BUCKET -F revision=$CIRCLE_SHA1 -F local_username=CircleCI
      # Persist :+1:
      - persist_to_workspace:
          root: ~/repo
          paths: .

  viewer_demo_publish:
    working_directory: ~/repo
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: ~/repo
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Deploy latest version to viewer.ohif.org
          command: |
            # https://circleci.com/docs/2.0/google-auth/#authorization
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            # Remove all files in Storage Bucket; Push latest
            gsutil -m rm gs://$GOOGLE_STORAGE_BUCKET/**
            gsutil -m rsync -R platform/viewer/dist gs://$GOOGLE_STORAGE_BUCKET

workflows:
  version: 2

  # PULL REQUESTS
  PR_CHECKS:
    jobs:
      - PR_UNIT_TESTS:
          filters:
            branches:
              ignore:
                - master
                - feature/*
                - hotfix/*
      # Cypress job added by `cypress-io` orb
      - cypress/run:
          pre-steps:
            - run: 'rm -rf ~/.yarn && npm i -g yarn && yarn -v' # Use yarn latest
          yarn: true
          store_artifacts: true
          start: yarn run dev
          wait-on: 'http://localhost:3000'
          no-workspace: true # Don't persist workspace
          working_directory: platform/viewer
          cache-key: 'yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}'
          post-steps:
            - store_test_results:
                path: cypress/results
          requires:
            - PR_UNIT_TESTS

  # MERGE TO MASTER
  RELEASE:
    jobs:
      - MERGE_UNIT_TESTS:
          filters:
            branches:
              only: master
      # Cypress job added by `cypress-io` orb
      - cypress/run:
          pre-steps:
            - run: 'rm -rf ~/.yarn && npm i -g yarn && yarn -v' # Use yarn latest
          yarn: true
          record: true
          store_artifacts: true
          start: yarn run dev
          wait-on: 'http://localhost:3000'
          working_directory: platform/viewer
          cache-key: 'yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}'
          post-steps:
            - store_test_results:
                path: cypress/results
          requires:
            - MERGE_UNIT_TESTS
      # Update NPM
      - npm_publish:
          requires:
            - cypress/run
      # Update docs.ohif.org
      - docs_publish:
          requires:
            - cypress/run
      # Update hub.docker.org
      # - docker_publish:
      #     requires:
      #       - npm_publish
      # Update viewer.ohif.org
      - viewer_demo_build:
          requires:
            - cypress/run
      - viewer_demo_publish:
          requires:
            - viewer_demo_build
